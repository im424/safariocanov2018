1) Given:
  class X {
    static int MAX_VAL = 100;
    int value = 99;
    public void setVal(int x) {
      if (x <= MAX_VAL) value = x;
    }
  }
and:
    X a = new X();
    X b = new X();
    a.setVal(120);
    System.out.print(a.value + ", ");
    b.MAX_VAL = 150; // EQUIVALENT to X.MAX_VAL... (and legal!)
    a.setVal(140);
    System.out.println(a.value);

    What is the result?
A) 99, 99
B) 120, 140
C) 99, 140
D) Compilation failure
E) Exception at runtime

2)
 class Y {
    static String sayHi() {
      return "Y-Hello";
    }
    String sayHi2() {
      return "Y-Hello2";
    }
  }
  class Z extends Y {
    static String sayHi() {
      return "Z-Hello";
    }
    String sayHi2() {
      return "Z-Hello2";
    }
  }

Y y = new Z();  // a Z "is a" Y
System.out.println(y.sayHi() + ", " + y.sayHi2());
// equivalent to:
//System.out.println(Y.sayHi() + ", " + y.sayHi2());

What is the result?
    A) Y-Hello, Y-Hello2
    B) Y-Hello, Z-Hello2
    C) Z-Hello, Z-Hello2
    D) Z-Hello, Y-Hello2
    E) Compilation fails

3)
  class Base {
    void doBaseStuff() {
      System.out.println("doBaseStuff");
    }
  }

  class Sub extends Base {
    void doBaseStuff() {
      System.out.println("doSubStuff");
    }
    void doOtherStuff() {
      System.out.println("doOtherStuff");
    }
  }

In the Base and Sub classes, which are true in isolation?
x    A) doBaseStuff in Base can be marked public without causing errors
y    B) doBaseStuff in Base can be marked private without causing errors
y    C) doBaseStuff in Sub can be marked public without causing errors
y    D) doBaseStuff in Sub can be marked protected without causing errors
n    E) doBaseStuff in Sub can be marked private without causing errors
